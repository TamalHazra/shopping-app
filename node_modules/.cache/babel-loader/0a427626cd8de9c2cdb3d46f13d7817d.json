{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB5hyhm6emQ52qr9LmQGeqaEYpMI1AVgfE\",\n  authDomain: \"crown-shopping-db-5fdf5.firebaseapp.com\",\n  projectId: \"crown-shopping-db-5fdf5\",\n  storageBucket: \"crown-shopping-db-5fdf5.appspot.com\",\n  messagingSenderId: \"371387946706\",\n  appId: \"1:371387946706:web:f0572d8a12afbcbecd7f0b\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWthGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log(`error creation an user ${error.message}`);\n    }\n  } //if user data exists\n\n\n  return userDocRef;\n}; // export const createAuthUserWithEmailAndPassword= async(email,password)=>{\n//   if(!email || !password) return;\n//   return await createUserWithEmailAndPassword(auth,email,password)\n// }\n\ncrea;","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWthGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message","crea"],"sources":["D:/React-Training/react-first-demo/shopping-app/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import {initializeApp } from 'firebase/app';\r\nimport {getAuth,signInWithRedirect,signInWithPopup,GoogleAuthProvider,createUserWithEmailAndPassword} from 'firebase/auth'\r\nimport { getFirestore,doc,getDoc,setDoc} from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB5hyhm6emQ52qr9LmQGeqaEYpMI1AVgfE\",\r\n    authDomain: \"crown-shopping-db-5fdf5.firebaseapp.com\",\r\n    projectId: \"crown-shopping-db-5fdf5\",\r\n    storageBucket: \"crown-shopping-db-5fdf5.appspot.com\",\r\n    messagingSenderId: \"371387946706\",\r\n    appId: \"1:371387946706:web:f0572d8a12afbcbecd7f0b\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  const firebaseApp = initializeApp(firebaseConfig);\r\n\r\n  const provider = new GoogleAuthProvider()\r\n  provider.setCustomParameters({\r\n    prompt:\"select_account\"\r\n  })\r\n\r\n  export const auth=getAuth();\r\n  export const signInWthGooglePopup=()=>signInWithPopup(auth,provider);\r\n\r\n  export const signInWithGoogleRedirect = ()=> signInWithRedirect(auth,provider)\r\n\r\n  export const db = getFirestore()\r\n\r\n  export const createUserDocumentFromAuth = async(userAuth)=>{\r\n    const userDocRef= doc(db,'users',userAuth.uid)\r\n\r\n    console.log(userDocRef)\r\n\r\n    const userSnapshot = await getDoc(userDocRef)\r\n    console.log(userSnapshot)\r\n    console.log(userSnapshot.exists())\r\n\r\n    if(!userSnapshot.exists()){\r\n        const {displayName,email} = userAuth\r\n        const createdAt = new Date()\r\n        try{\r\n            await setDoc(userDocRef,{\r\n                displayName,\r\n                email,\r\n                createdAt\r\n            })\r\n        }catch(error){\r\n            console.log(`error creation an user ${error.message}`)\r\n        }\r\n    }\r\n    //if user data exists\r\n    return userDocRef\r\n    \r\n  }\r\n  // export const createAuthUserWithEmailAndPassword= async(email,password)=>{\r\n  //   if(!email || !password) return;\r\n  //   return await createUserWithEmailAndPassword(auth,email,password)\r\n  // }\r\n\r\n  crea"],"mappings":"AAAA,SAAQA,aAAR,QAA6B,cAA7B;AACA,SAAQC,OAAR,EAAgBC,kBAAhB,EAAmCC,eAAnC,EAAmDC,kBAAnD,EAAsEC,8BAAtE,QAA2G,eAA3G;AACA,SAASC,YAAT,EAAsBC,GAAtB,EAA0BC,MAA1B,EAAiCC,MAAjC,QAA8C,oBAA9C;AAEA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCADW;EAEnBC,UAAU,EAAE,yCAFO;EAGnBC,SAAS,EAAE,yBAHQ;EAInBC,aAAa,EAAE,qCAJI;EAKnBC,iBAAiB,EAAE,cALA;EAMnBC,KAAK,EAAE;AANY,CAAvB,C,CASE;;AACA,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAD,CAAjC;AAEA,MAAMQ,QAAQ,GAAG,IAAId,kBAAJ,EAAjB;AACAc,QAAQ,CAACC,mBAAT,CAA6B;EAC3BC,MAAM,EAAC;AADoB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAACpB,OAAO,EAAlB;AACP,OAAO,MAAMqB,oBAAoB,GAAC,MAAInB,eAAe,CAACkB,IAAD,EAAMH,QAAN,CAA9C;AAEP,OAAO,MAAMK,wBAAwB,GAAG,MAAKrB,kBAAkB,CAACmB,IAAD,EAAMH,QAAN,CAAxD;AAEP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,MAAMC,QAAN,IAAiB;EACzD,MAAMC,UAAU,GAAEpB,GAAG,CAACiB,EAAD,EAAI,OAAJ,EAAYE,QAAQ,CAACE,GAArB,CAArB;EAEAC,OAAO,CAACC,GAAR,CAAYH,UAAZ;EAEA,MAAMI,YAAY,GAAG,MAAMvB,MAAM,CAACmB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACAF,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;EAEA,IAAG,CAACD,YAAY,CAACC,MAAb,EAAJ,EAA0B;IACtB,MAAM;MAACC,WAAD;MAAaC;IAAb,IAAsBR,QAA5B;IACA,MAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IACA,IAAG;MACC,MAAM3B,MAAM,CAACkB,UAAD,EAAY;QACpBM,WADoB;QAEpBC,KAFoB;QAGpBC;MAHoB,CAAZ,CAAZ;IAKH,CAND,CAMC,OAAME,KAAN,EAAY;MACTR,OAAO,CAACC,GAAR,CAAa,0BAAyBO,KAAK,CAACC,OAAQ,EAApD;IACH;EACJ,CArBwD,CAsBzD;;;EACA,OAAOX,UAAP;AAED,CAzBM,C,CA0BP;AACA;AACA;AACA;;AAEAY,IAAI"},"metadata":{},"sourceType":"module"}