{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Training\\\\react-first-demo\\\\shopping-app\\\\src\\\\contexts\\\\cart.context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cart items contains a productToAdd\n  const existingCartItem = cartItems; //if productToAdd is found then inc thr qty and return a new array with modified cartItems/new cart items\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }]; //when the cart is empty and you are adding\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {}\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"k4fTkBb3iPWVWS5nx4auqJ3zTO0=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","addCartItem","cartItems","productToAdd","existingCartItem","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","CartProvider","children","setCartItems","value"],"sources":["D:/React-Training/react-first-demo/shopping-app/src/contexts/cart.context.js"],"sourcesContent":["import { createContext,useState } from \"react\";\r\n\r\nconst addCartItem =(cartItems,productToAdd)=>{\r\n    //find if cart items contains a productToAdd\r\n    const existingCartItem = cartItems\r\n    //if productToAdd is found then inc thr qty and return a new array with modified cartItems/new cart items\r\nreturn [...cartItems,{...productToAdd,quantity:1}] //when the cart is empty and you are adding\r\n}\r\n\r\nexport const CartContext = createContext({\r\n    isCartOpen:false,\r\n    setIsCartOpen:()=>{},\r\n    cartItems:[],\r\n    addItemToCart:()=>{}\r\n})\r\nexport const CartProvider=({children})=>{\r\n    const [isCartOpen,setIsCartOpen]=useState(false)\r\n    const [cartItems,setCartItems]=useState([])\r\n    const addItemToCart=(productToAdd)=>{\r\n        setCartItems(addCartItem(cartItems,productToAdd))\r\n    }\r\n    const value = {isCartOpen,setIsCartOpen}\r\n    return (\r\n        <CartContext.Provider value={value}>{children}</CartContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAuBC,QAAvB,QAAuC,OAAvC;;;AAEA,MAAMC,WAAW,GAAE,CAACC,SAAD,EAAWC,YAAX,KAA0B;EACzC;EACA,MAAMC,gBAAgB,GAAGF,SAAzB,CAFyC,CAGzC;;EACJ,OAAO,CAAC,GAAGA,SAAJ,EAAc,EAAC,GAAGC,YAAJ;IAAiBE,QAAQ,EAAC;EAA1B,CAAd,CAAP,CAJ6C,CAIM;AAClD,CALD;;AAOA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC;EACrCQ,UAAU,EAAC,KAD0B;EAErCC,aAAa,EAAC,MAAI,CAAE,CAFiB;EAGrCN,SAAS,EAAC,EAH2B;EAIrCO,aAAa,EAAC,MAAI,CAAE;AAJiB,CAAD,CAAjC;AAMP,OAAO,MAAMC,YAAY,GAAC,QAAc;EAAA;;EAAA,IAAb;IAACC;EAAD,CAAa;EACpC,MAAM,CAACJ,UAAD,EAAYC,aAAZ,IAA2BR,QAAQ,CAAC,KAAD,CAAzC;EACA,MAAM,CAACE,SAAD,EAAWU,YAAX,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;;EACA,MAAMS,aAAa,GAAEN,YAAD,IAAgB;IAChCS,YAAY,CAACX,WAAW,CAACC,SAAD,EAAWC,YAAX,CAAZ,CAAZ;EACH,CAFD;;EAGA,MAAMU,KAAK,GAAG;IAACN,UAAD;IAAYC;EAAZ,CAAd;EACA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEK,KAA7B;IAAA,UAAqCF;EAArC;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAVM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}