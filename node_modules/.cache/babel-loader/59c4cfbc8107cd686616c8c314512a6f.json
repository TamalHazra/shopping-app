{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Training\\\\react-first-demo\\\\shopping-app\\\\src\\\\contexts\\\\cart.context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cart items contains a productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //if productToAdd is found then inc thr qty and return a new array with modified cartItems/new cart items\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  const removeCartItem = (cartItems, cartItemToRemove) => {//find the cartItem that is to be removed i.e. existing item in the cart\n    //check if quantity is equal to 1, if it is t\n  };\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }]; //when the cart is empty and you are adding\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemFromCart = cartItemToRemove => {\n    setCartItems(addCartItem(cartItems, cartItemToRemove));\n  }; // const removeItemFromCart=(cartItems,productToRemove)=>{\n  //     const existingCartItem = cartItems.find(\n  //         (cartItem) => cartItem.id ===productToRemove.id\n  //     )\n  //     if(existingCartItem && existingCartItem.quantity > 1){\n  //         return cartItems.map((cartItem)=>\n  //         cartItem.id === productToRemove.id?\n  //         {...cartItem, quantity: cartItem.quantity-1}\n  //         : cartItem\n  //         )\n  //     }\n  //     return cartItems.filter((cartItem)=>cartItem.id !== productToRemove.id)\n  // }\n\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"SzvcdIN9B19VMnK/gYSAPDIQ/NE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","cartCount","CartProvider","children","setCartItems","setCartCount","newCartCount","reduce","total","value"],"sources":["D:/React-Training/react-first-demo/shopping-app/src/contexts/cart.context.js"],"sourcesContent":["import { createContext,useEffect,useState } from \"react\";\r\n\r\nconst addCartItem =(cartItems,productToAdd)=>{\r\n    //find if cart items contains a productToAdd\r\n    const existingCartItem = cartItems.find((cartItem)=>cartItem.id===productToAdd.id)\r\n    //if productToAdd is found then inc thr qty and return a new array with modified cartItems/new cart items\r\n    if(existingCartItem){\r\n        return cartItems.map((cartItem)=>cartItem.id===productToAdd.id?\r\n        {...cartItem,quantity:cartItem.quantity+1}\r\n        :\r\n        cartItem)\r\n    }\r\n\r\n    const removeCartItem=(cartItems,cartItemToRemove)=>{\r\n        //find the cartItem that is to be removed i.e. existing item in the cart\r\n\r\n        //check if quantity is equal to 1, if it is t\r\n    }\r\n\r\n    return [...cartItems,{...productToAdd,quantity:1}] //when the cart is empty and you are adding\r\n}\r\n\r\nexport const CartContext = createContext({\r\n    isCartOpen:false,\r\n    setIsCartOpen:()=>{},\r\n    cartItems:[],\r\n    addItemToCart:()=>{},\r\n    removeItemFromCart:()=>{},\r\n    cartCount:0\r\n})\r\nexport const CartProvider=({children})=>{\r\n    const [isCartOpen,setIsCartOpen]=useState(false)\r\n    const [cartItems,setCartItems]=useState([])\r\n    const [cartCount,setCartCount]=useState(0)\r\n\r\n    useEffect(()=>{\r\n        const newCartCount = cartItems.reduce((total,cartItem)=>total+cartItem.quantity ,0)\r\n        setCartCount(newCartCount)\r\n    },[cartItems])\r\n\r\n    const addItemToCart=(productToAdd)=>{\r\n        setCartItems(addCartItem(cartItems,productToAdd))\r\n    }\r\n\r\n    const removeItemFromCart=(cartItemToRemove)=>{\r\n        setCartItems(addCartItem(cartItems,cartItemToRemove))\r\n    }\r\n\r\n    // const removeItemFromCart=(cartItems,productToRemove)=>{\r\n    //     const existingCartItem = cartItems.find(\r\n    //         (cartItem) => cartItem.id ===productToRemove.id\r\n    //     )\r\n    //     if(existingCartItem && existingCartItem.quantity > 1){\r\n    //         return cartItems.map((cartItem)=>\r\n    //         cartItem.id === productToRemove.id?\r\n    //         {...cartItem, quantity: cartItem.quantity-1}\r\n    //         : cartItem\r\n    //         )\r\n    //     }\r\n    //     return cartItems.filter((cartItem)=>cartItem.id !== productToRemove.id)\r\n    // }\r\n\r\n    const value = {isCartOpen,setIsCartOpen,addItemToCart,cartItems,cartCount}\r\n    return (\r\n        <CartContext.Provider value={value}>{children}</CartContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAuBC,SAAvB,EAAiCC,QAAjC,QAAiD,OAAjD;;;AAEA,MAAMC,WAAW,GAAE,CAACC,SAAD,EAAWC,YAAX,KAA0B;EACzC;EACA,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IAAYA,QAAQ,CAACC,EAAT,KAAcJ,YAAY,CAACI,EAAtD,CAAzB,CAFyC,CAGzC;;EACA,IAAGH,gBAAH,EAAoB;IAChB,OAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IAAYA,QAAQ,CAACC,EAAT,KAAcJ,YAAY,CAACI,EAA3B,GACjC,EAAC,GAAGD,QAAJ;MAAaG,QAAQ,EAACH,QAAQ,CAACG,QAAT,GAAkB;IAAxC,CADiC,GAGjCH,QAHO,CAAP;EAIH;;EAED,MAAMI,cAAc,GAAC,CAACR,SAAD,EAAWS,gBAAX,KAA8B,CAC/C;IAEA;EACH,CAJD;;EAMA,OAAO,CAAC,GAAGT,SAAJ,EAAc,EAAC,GAAGC,YAAJ;IAAiBM,QAAQ,EAAC;EAA1B,CAAd,CAAP,CAjByC,CAiBU;AACtD,CAlBD;;AAoBA,OAAO,MAAMG,WAAW,gBAAGd,aAAa,CAAC;EACrCe,UAAU,EAAC,KAD0B;EAErCC,aAAa,EAAC,MAAI,CAAE,CAFiB;EAGrCZ,SAAS,EAAC,EAH2B;EAIrCa,aAAa,EAAC,MAAI,CAAE,CAJiB;EAKrCC,kBAAkB,EAAC,MAAI,CAAE,CALY;EAMrCC,SAAS,EAAC;AAN2B,CAAD,CAAjC;AAQP,OAAO,MAAMC,YAAY,GAAC,QAAc;EAAA;;EAAA,IAAb;IAACC;EAAD,CAAa;EACpC,MAAM,CAACN,UAAD,EAAYC,aAAZ,IAA2Bd,QAAQ,CAAC,KAAD,CAAzC;EACA,MAAM,CAACE,SAAD,EAAWkB,YAAX,IAAyBpB,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACiB,SAAD,EAAWI,YAAX,IAAyBrB,QAAQ,CAAC,CAAD,CAAvC;EAEAD,SAAS,CAAC,MAAI;IACV,MAAMuB,YAAY,GAAGpB,SAAS,CAACqB,MAAV,CAAiB,CAACC,KAAD,EAAOlB,QAAP,KAAkBkB,KAAK,GAAClB,QAAQ,CAACG,QAAlD,EAA4D,CAA5D,CAArB;IACAY,YAAY,CAACC,YAAD,CAAZ;EACH,CAHQ,EAGP,CAACpB,SAAD,CAHO,CAAT;;EAKA,MAAMa,aAAa,GAAEZ,YAAD,IAAgB;IAChCiB,YAAY,CAACnB,WAAW,CAACC,SAAD,EAAWC,YAAX,CAAZ,CAAZ;EACH,CAFD;;EAIA,MAAMa,kBAAkB,GAAEL,gBAAD,IAAoB;IACzCS,YAAY,CAACnB,WAAW,CAACC,SAAD,EAAWS,gBAAX,CAAZ,CAAZ;EACH,CAFD,CAdoC,CAkBpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAMc,KAAK,GAAG;IAACZ,UAAD;IAAYC,aAAZ;IAA0BC,aAA1B;IAAwCb,SAAxC;IAAkDe;EAAlD,CAAd;EACA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEQ,KAA7B;IAAA,UAAqCN;EAArC;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CApCM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}