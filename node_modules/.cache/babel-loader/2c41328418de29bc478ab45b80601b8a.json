{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Training\\\\react-first-demo\\\\shopping-app\\\\src\\\\contexts\\\\cart.context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cart items contains a productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); //if productToAdd is found then inc thr qty and return a new array with modified cartItems/new cart items\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }]; //when the cart is empty and you are adding\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cartItem that is to be removed i.e. existing item in the cart\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); //check if quantity is equal to 1, if it is then that item should be removed from the cart\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } //if the quantity is greater than 1 then we return the cartItems with matching cart item and also\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  total: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    setCartTotal(newCartTotal);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemToCart = cartItemToRemove => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n\n  const clearItemFromCart = cartItemToClear => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  }; // const removeItemFromCart=(cartItems,productToRemove)=>{\n  //     const existingCartItem = cartItems.find(\n  //         (cartItem) => cartItem.id ===productToRemove.id\n  //     )\n  //     if(existingCartItem && existingCartItem.quantity > 1){\n  //         return cartItems.map((cartItem)=>\n  //         cartItem.id === productToRemove.id?\n  //         {...cartItem, quantity: cartItem.quantity-1}\n  //         : cartItem\n  //         )\n  //     }\n  //     return cartItems.filter((cartItem)=>cartItem.id !== productToRemove.id)\n  // }\n\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"BZjN72nFlic3vxsdB4y1+Jqu4ok=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","total","CartProvider","children","setCartItems","setCartCount","cartTotal","setCartTotal","newCartCount","reduce","newCartTotal","price","removeItemToCart","value"],"sources":["D:/React-Training/react-first-demo/shopping-app/src/contexts/cart.context.js"],"sourcesContent":["import { createContext,useEffect,useState } from \"react\";\r\n\r\nconst addCartItem =(cartItems,productToAdd)=>{\r\n    //find if cart items contains a productToAdd\r\n    const existingCartItem = cartItems.find((cartItem)=>cartItem.id===productToAdd.id)\r\n    //if productToAdd is found then inc thr qty and return a new array with modified cartItems/new cart items\r\n    if(existingCartItem){\r\n        return cartItems.map((cartItem)=>cartItem.id===productToAdd.id?\r\n        {...cartItem,quantity:cartItem.quantity+1}\r\n        :\r\n        cartItem)\r\n    }\r\n    return [...cartItems,{...productToAdd,quantity:1}] //when the cart is empty and you are adding\r\n}\r\nconst removeCartItem=(cartItems,cartItemToRemove)=>{\r\n    //find the cartItem that is to be removed i.e. existing item in the cart\r\n    const existingCartItem = cartItems.find((cartItem)=>cartItem.id===cartItemToRemove.id)\r\n    //check if quantity is equal to 1, if it is then that item should be removed from the cart\r\n    if(existingCartItem.quantity===1){\r\n        return cartItems.filter(cartItem=>cartItem.id !==cartItemToRemove.id)\r\n    }\r\n    //if the quantity is greater than 1 then we return the cartItems with matching cart item and also\r\n    return cartItems.map(cartItem=>\r\n        cartItem.id === cartItemToRemove.id?\r\n        {...cartItem,quantity:cartItem.quantity-1}\r\n        : cartItem)\r\n}\r\nconst clearCartItem=(cartItems,cartItemToClear)=>{\r\n    return cartItems.filter(cartItem=>cartItem.id !==cartItemToClear.id)\r\n}\r\n\r\nexport const CartContext = createContext({\r\n    isCartOpen:false,\r\n    setIsCartOpen:()=>{},\r\n    cartItems:[],\r\n    addItemToCart:()=>{},\r\n    removeItemFromCart:()=>{},\r\n    clearItemFromCart:()=>{},\r\n    cartCount:0,\r\n    total:0\r\n})\r\nexport const CartProvider=({children})=>{\r\n    const [isCartOpen,setIsCartOpen]=useState(false)\r\n    const [cartItems,setCartItems]=useState([])\r\n    const [cartCount,setCartCount]=useState(0)\r\n    const [cartTotal,setCartTotal]=useState(0)\r\n\r\n    useEffect(()=>{\r\n        const newCartCount = cartItems.reduce((total,cartItem)=>total+cartItem.quantity ,0)\r\n        setCartCount(newCartCount)\r\n    },[cartItems])\r\n\r\n    useEffect(()=>{\r\n        const newCartTotal = cartItems.reduce((total,cartItem)=>total+cartItem.quantity * cartItem.price ,0)\r\n        setCartTotal(newCartTotal)\r\n    },[cartItems])\r\n\r\n    const addItemToCart=(productToAdd)=>{\r\n        setCartItems(addCartItem(cartItems,productToAdd))\r\n    }\r\n\r\n    const removeItemToCart=(cartItemToRemove)=>{\r\n        setCartItems(removeCartItem(cartItems,cartItemToRemove))\r\n    }\r\n\r\n    const clearItemFromCart=(cartItemToClear)=>{\r\n        setCartItems(clearCartItem(cartItems,cartItemToClear))\r\n    }\r\n\r\n\r\n    // const removeItemFromCart=(cartItems,productToRemove)=>{\r\n    //     const existingCartItem = cartItems.find(\r\n    //         (cartItem) => cartItem.id ===productToRemove.id\r\n    //     )\r\n    //     if(existingCartItem && existingCartItem.quantity > 1){\r\n    //         return cartItems.map((cartItem)=>\r\n    //         cartItem.id === productToRemove.id?\r\n    //         {...cartItem, quantity: cartItem.quantity-1}\r\n    //         : cartItem\r\n    //         )\r\n    //     }\r\n    //     return cartItems.filter((cartItem)=>cartItem.id !== productToRemove.id)\r\n    // }\r\n\r\n    const value = {isCartOpen,\r\n        setIsCartOpen,\r\n        addItemToCart,\r\n        removeItemToCart,\r\n        clearItemFromCart,\r\n        cartItems,\r\n        cartCount,\r\n        cartTotal\r\n    }\r\n    return (\r\n        <CartContext.Provider value={value}>{children}</CartContext.Provider>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}