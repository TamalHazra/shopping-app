{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB5hyhm6emQ52qr9LmQGeqaEYpMI1AVgfE\",\n  authDomain: \"crown-shopping-db-5fdf5.firebaseapp.com\",\n  projectId: \"crown-shopping-db-5fdf5\",\n  storageBucket: \"crown-shopping-db-5fdf5.appspot.com\",\n  messagingSenderId: \"371387946706\",\n  appId: \"1:371387946706:web:f0572d8a12afbcbecd7f0b\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(`error creation an user ${error.message}`);\n    }\n  } //if user data exists\n\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => signOut(auth);\nexport const onAuthStateChangedListner = callback => onAuthStateChanged(auth, callback); // createUserWithEmailAndPassword(auth,email,password)\n\nexport default firebaseApp;","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListner","callback"],"sources":["D:/React-Training/react-first-demo/shopping-app/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithRedirect,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { getFirestore,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  collection, } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB5hyhm6emQ52qr9LmQGeqaEYpMI1AVgfE\",\r\n  authDomain: \"crown-shopping-db-5fdf5.firebaseapp.com\",\r\n  projectId: \"crown-shopping-db-5fdf5\",\r\n  storageBucket: \"crown-shopping-db-5fdf5.appspot.com\",\r\n  messagingSenderId: \"371387946706\",\r\n  appId: \"1:371387946706:web:f0572d8a12afbcbecd7f0b\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst provider = new GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\r\n\r\nexport const signInWithGoogleRedirect = () =>\r\n  signInWithRedirect(auth, provider);\r\n\r\nexport const db = getFirestore();\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n\r\n  console.log(userDocRef);\r\n\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  console.log(userSnapshot);\r\n  console.log(userSnapshot.exists());\r\n\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      console.log(`error creation an user ${error.message}`);\r\n    }\r\n  }\r\n  //if user data exists\r\n  return userDocRef;\r\n};\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\nexport const signOutUser = async () => signOut(auth);\r\n\r\nexport const onAuthStateChangedListner = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n// createUserWithEmailAndPassword(auth,email,password)\r\n\r\nexport default firebaseApp"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,EAMEC,0BANF,EAOEC,OAPF,EAQEC,kBARF,QASO,eATP;AAUA,SAASC,YAAT,EACEC,GADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,UAJF,QAIqB,oBAJrB;AAMA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,yCAFS;EAGrBC,SAAS,EAAE,yBAHU;EAIrBC,aAAa,EAAE,qCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGrB,aAAa,CAACc,cAAD,CAAjC;AAEA,MAAMQ,QAAQ,GAAG,IAAIlB,kBAAJ,EAAjB;AACAkB,QAAQ,CAACC,mBAAT,CAA6B;EAC3BC,MAAM,EAAE;AADmB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGxB,OAAO,EAApB;AACP,OAAO,MAAMyB,qBAAqB,GAAG,MAAMvB,eAAe,CAACsB,IAAD,EAAOH,QAAP,CAAnD;AAEP,OAAO,MAAMK,wBAAwB,GAAG,MACtCzB,kBAAkB,CAACuB,IAAD,EAAOH,QAAP,CADb;AAGP,OAAO,MAAMM,EAAE,GAAGnB,YAAY,EAAvB;AAEP,OAAO,MAAMoB,0BAA0B,GAAG,gBACxCC,QADwC,EAGrC;EAAA,IADHC,qBACG,uEADqB,EACrB;EACH,MAAMC,UAAU,GAAGtB,GAAG,CAACkB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;EAEAC,OAAO,CAACC,GAAR,CAAYH,UAAZ;EAEA,MAAMI,YAAY,GAAG,MAAMzB,MAAM,CAACqB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACAF,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;EAEA,IAAI,CAACD,YAAY,CAACC,MAAb,EAAL,EAA4B;IAC1B,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBT,QAA/B;IACA,MAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IACA,IAAI;MACF,MAAM7B,MAAM,CAACoB,UAAD,EAAa;QACvBM,WADuB;QAEvBC,KAFuB;QAGvBC,SAHuB;QAIvB,GAAGT;MAJoB,CAAb,CAAZ;IAMD,CAPD,CAOE,OAAOW,KAAP,EAAc;MACdR,OAAO,CAACC,GAAR,CAAa,0BAAyBO,KAAK,CAACC,OAAQ,EAApD;IACD;EACF,CAtBE,CAuBH;;;EACA,OAAOX,UAAP;AACD,CA5BM;AA6BP,OAAO,MAAMY,kCAAkC,GAAG,OAAOL,KAAP,EAAcM,QAAd,KAA2B;EAC3E,IAAI,CAACN,KAAD,IAAU,CAACM,QAAf,EAAyB;EACzB,OAAO,MAAMxC,8BAA8B,CAACoB,IAAD,EAAOc,KAAP,EAAcM,QAAd,CAA3C;AACD,CAHM;AAIP,OAAO,MAAMC,kCAAkC,GAAG,OAAOP,KAAP,EAAcM,QAAd,KAA2B;EAC3E,IAAI,CAACN,KAAD,IAAU,CAACM,QAAf,EAAyB;EACzB,OAAO,MAAMvC,0BAA0B,CAACmB,IAAD,EAAOc,KAAP,EAAcM,QAAd,CAAvC;AACD,CAHM;AAIP,OAAO,MAAME,WAAW,GAAG,YAAYxC,OAAO,CAACkB,IAAD,CAAvC;AAEP,OAAO,MAAMuB,yBAAyB,GAAIC,QAAD,IACvCzC,kBAAkB,CAACiB,IAAD,EAAOwB,QAAP,CADb,C,CAEP;;AAEA,eAAe5B,WAAf"},"metadata":{},"sourceType":"module"}